"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@tiptap/core"),t=require("@tiptap/pm/state");const r=({key:e,editor:r,onPaste:o,onDrop:i,allowedMimeTypes:n})=>new t.Plugin({key:e||new t.PluginKey("fileHandler"),props:{handleDrop(e,t){var o;if(!i)return!1;if(!(null===(o=t.dataTransfer)||void 0===o?void 0:o.files.length))return!1;const l=e.posAtCoords({left:t.clientX,top:t.clientY});let a=Array.from(t.dataTransfer.files);return n&&(a=a.filter((e=>n.includes(e.type)))),0!==a.length&&(t.preventDefault(),t.stopPropagation(),i(r,a,(null==l?void 0:l.pos)||0),!0)},handlePaste(e,t){var i;if(!o)return!1;if(!(null===(i=t.clipboardData)||void 0===i?void 0:i.files.length))return!1;let l=Array.from(t.clipboardData.files);const a=t.clipboardData.getData("text/html");return n&&(l=l.filter((e=>n.includes(e.type)))),0!==l.length&&(t.preventDefault(),t.stopPropagation(),o(r,l,a),!(a.length>0))}}}),o=e.Extension.create({name:"fileHandler",addOptions:()=>({onPaste:void 0,onDrop:void 0,allowedMimeTypes:void 0}),addProseMirrorPlugins(){return[r({key:new t.PluginKey(this.name),editor:this.editor,allowedMimeTypes:this.options.allowedMimeTypes,onDrop:this.options.onDrop,onPaste:this.options.onPaste})]}});exports.FileHandlePlugin=r,exports.FileHandler=o,exports.default=o;
